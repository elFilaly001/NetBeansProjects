/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gnots.views;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import gnots.models.Etudiant;
import gnots.models.Examen;
import gnots.models.Groupe;
import gnots.dao.HibernateUtil;
import gnots.models.Notes;
import gnots.models.NotesId;

/**
 *
 * @author DEll
 */
public class JIFrameSaisiNotes extends javax.swing.JInternalFrame {
    Session session=null;
    EcouteurExamen ecouteur=new EcouteurExamen();

    /**
     * Creates new form JIframeSaisiNotes
     */
    public JIFrameSaisiNotes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbxGroupe = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbxExamen = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Groupe");

        cbxGroupe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxGroupeItemStateChanged(evt);
            }
        });
        cbxGroupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxGroupeActionPerformed(evt);
            }
        });

        jLabel2.setText("Examen :");

        cbxExamen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxExamenItemStateChanged(evt);
            }
        });
        cbxExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxExamenActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id e", "Nom", "Prenom", "Note"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButton1.setText("Enregestrie le saisi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbxGroupe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxExamen, 0, 384, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbxGroupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxGroupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxGroupeActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_cbxGroupeActionPerformed

    private void cbxExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxExamenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxExamenActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        session=HibernateUtil.getSession();
        List<Groupe> listGrp=new ArrayList<Groupe>();
        listGrp=session.createQuery("From Groupe").list();
        for(Groupe g:listGrp)
            cbxGroupe.addItem(g);
       // cbxExamen.addItemListener(ecouteur);
        
       
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void cbxGroupeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxGroupeItemStateChanged
        // TODO add your handling code here:
        try {
            cbxExamen.removeItemListener(ecouteur);
            Query q = session.createQuery("select e from Examen e where e.groupe.idG=:idg");
            Groupe g = (Groupe) cbxGroupe.getSelectedItem();
            q.setLong("idg", g.getIdG());
            cbxExamen.removeAllItems();
            List<Examen> listex = q.list();
            for (Examen e : listex) {
                cbxExamen.addItem(e);
            }
            cbxExamen.addItemListener(ecouteur);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error "+e.getMessage());
        }
            
        
        
        
        
    }//GEN-LAST:event_cbxGroupeItemStateChanged

    private void cbxExamenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxExamenItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cbxExamenItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) table.getModel();
         Transaction tx=session.beginTransaction();
        for (int i = 0; i <model.getRowCount(); i++) {
            Examen ex=(Examen) cbxExamen.getSelectedItem();
            Notes n=(Notes) session.get(Notes.class, new NotesId(ex.getIdEx(),Long.parseLong( model.getValueAt(i,0).toString())));
            n.setNote(Float.parseFloat(model.getValueAt(i, 3).toString()));
            session.save(n);
            
        }
        tx.commit();
        session.flush();
        JOptionPane.showMessageDialog(rootPane,"succes ");
    }//GEN-LAST:event_jButton1ActionPerformed
     class EcouteurExamen implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent evt) {
            Query q=session.createQuery("From Notes n where n.examen.idEx=:id");
            Examen ex=(Examen) cbxExamen.getSelectedItem();
            q.setLong("id", ex.getIdEx());
            List<Notes> listN=q.list();
            DefaultTableModel model=(DefaultTableModel) table.getModel();
            model.setRowCount(0);
            if(listN.size()>0){
            for(Notes n:listN){
                model.addRow(new Object[]{
                    n.getEtudiant().getIdE(),n.getEtudiant().getNom(),n.getEtudiant().getPrenom(),n.getNote()
                });
            }
            }else{
                Transaction tx=session.beginTransaction();
                for(Etudiant et :ex.getGroupe().getEtudiants()){
                    model.addRow(new Object[]{
                        et.getIdE(),et.getNom(),et.getPrenom(),null
                    });
                    Notes n=new Notes(new NotesId(ex.getIdEx(), et.getIdE()),et,null);
                    session.save(n);
                }
                tx.commit();
                session.flush();
            }
        }
    
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Examen> cbxExamen;
    private javax.swing.JComboBox<Groupe> cbxGroupe;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    
}
